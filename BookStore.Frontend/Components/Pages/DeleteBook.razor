@inject BooksClient BooksClient
@inject NavigationManager NavigatioinManager
@rendermode InteractiveServer

<div class="modal fade" id="@GetModalId(Book)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@ConfirmAsync">Delete</button>
      </div>
    </div>
  </div>
</div>

@code {
  [Parameter]
  public BookSummary? Book {get; set;}

  private string title = "";

  protected override void OnParametersSet()
  {
    title = $"Delete {Book?.Name}?";
  }

  public static string GetModalId(BookSummary? book)
  {
    ArgumentNullException.ThrowIfNull(book);
    return $"deletModal-{book.Id}";
  }

  private async Task ConfirmAsync()
  {
    await BooksClient.DeleteBookAsync(Book!.Id);
    NavigatioinManager.Refresh();
  }
}
