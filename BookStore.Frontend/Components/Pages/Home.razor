@page "/"
@inject BooksClient Client
@attribute [StreamRendering]

<PageTitle>Book Catalog</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editBook">Add New Book</a>
</div>

@if(books is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-3">
        <thead class="table-dark">
            <th class="text-end">Id</th>
            <th>Name</th>
            <th>Author</th>
            <th>Genre</th>
            <th>Publish Date</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td class="text-end">@book.Id</td>
                    <td>@book.Name</td>
                    <td>@book.Author</td>
                    <td>@book.Genre</td>
                    <td>@book.PublishDate</td>
                    <td>
                        <div>
                            <a class="btn btn-primary me-2" role="button" href="@BookUrl(book.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(book)">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                        <DeleteBook Book="@book" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private BookSummary[]? books;

    protected override async Task OnInitializedAsync()
    {
        books = await Client.GetBooksAsync();
    }

    private static string BookUrl(int id) => $"/editbook/{id}";

    private string GetDeleteModalId(BookSummary book)
    {
        return $"#{DeleteBook.GetModalId(book)}";
    }
}